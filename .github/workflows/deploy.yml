name: Deploy to EC2

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - reg
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Specify the Python version to use

      - name: Install Python dependencies
        run: |
          pip install docker prometheus_client

      - name: Run Docker Exporter
        run: |
          python container.py

      - name: Install Docker Compose
        run: |
          DOCKER_COMPOSE_VERSION="1.29.2"  # Replace with the desired version
          sudo curl -L "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push Docker images
        run: |
          docker-compose push

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets['EC2_SSH_PRIVATE_KEY_' + github.event.inputs.environment.toUpperCase()] }}
          SSH_HOST: ${{ secrets['EC2_HOST_' + github.event.inputs.environment.toUpperCase()] }}
          SSH_USER: ${{ secrets['EC2_USER_' + github.event.inputs.environment.toUpperCase()] }}
        run: |
          echo "$SSH_PRIVATE_KEY" > AGRF.pem
          chmod 600 AGRF.pem
          ssh -o StrictHostKeyChecking=no -i AGRF.pem $SSH_USER@$SSH_HOST << 'EOF'
            cd /home/ubuntu/marquez
            git pull origin main
            docker-compose pull
            docker-compose up -d
          EOF
